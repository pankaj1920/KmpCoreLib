package com.psbapp.utils.logger

import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.IO
import kotlinx.coroutines.launch
import kotlin.jvm.JvmStatic


object Print {
    fun log(message: String?) {
        println("╔═══════Print START═══════════════════════════════════════════════════════════════")
        println("Print : $message")
        println("╚═══════Print END═════════════════════════════════════════════════════════════════")

    }

    @JvmStatic
    fun logAsync(message: String, maxLogSize:Int = 200) {
        CoroutineScope(Dispatchers.IO).launch {
            logLong(message,maxLogSize)
        }
    }


    @JvmStatic
    fun logLong(message: String, maxLogSize:Int = 200) {
        println("╔═══════════LogLong START═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════")
        var start = 0
        while (start < message.length) {
            val end = (start + maxLogSize).coerceAtMost(message.length) // Ensure the end doesn't exceed the message length
            println(message.substring(start, end)) // Print each chunk
            start = end
        }
        println("╚════════════LogLong END════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════")
    }

}